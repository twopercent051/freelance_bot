from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton


class AdminInlineKeyboard(InlineKeyboardMarkup):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –∞–¥–º–∏–Ω–∞"""

    @classmethod
    def home_kb(cls) -> InlineKeyboardMarkup:
        """–ö–Ω–æ–ø–∫–∞ –¥–æ–º–æ–π"""
        keyboard = [[InlineKeyboardButton(text='üè° –î–æ–º–æ–π', callback_data='home')]]
        keyboard = InlineKeyboardMarkup(inline_keyboard=keyboard)
        return keyboard

    @classmethod
    def projects_kb(cls, projects_list: list) -> InlineKeyboardMarkup:
        """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
        keyboard = []
        for project in projects_list:
            project_id = project['id']
            project_title = project['title']
            keyboard.append([InlineKeyboardButton(text=f'ID: {project_id} || {project_title}',
                                                  callback_data=f'project_id:{project_id}')])
        keyboard.append([InlineKeyboardButton(text='üï∫ –ù–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç', callback_data='new_project')])
        keyboard.append([InlineKeyboardButton(text='üìã –°–ø–∏—Å–æ–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤', callback_data='excel_list')])
        keyboard.append([InlineKeyboardButton(text='üîé –ü–æ–∏—Å–∫ –ø–æ ID', callback_data='search_project')])
        keyboard = InlineKeyboardMarkup(inline_keyboard=keyboard)
        return keyboard

    @classmethod
    def profile_kb(cls, project_id: int, is_finished: bool):
        """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞"""
        keyboard = [[InlineKeyboardButton(text='‚è≥ –†–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è', callback_data=f'worktime:{project_id}')]]
        if not is_finished:
            keyboard.append([InlineKeyboardButton(text='üíµ –ó–∞–≤–µ—Ä—à–∏—Ç—å –ø—Ä–æ–µ–∫—Ç',
                                                  callback_data=f'finish_project:{project_id}')])
        keyboard.append([InlineKeyboardButton(text='üè° –î–æ–º–æ–π', callback_data='home')])
        keyboard = InlineKeyboardMarkup(inline_keyboard=keyboard)
        return keyboard
